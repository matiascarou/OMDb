{"ast":null,"code":"var _jsxFileName = \"/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ForwardAndBack from \"./ForwardAndBack\";\nimport EmptyMovies from \"./EmptyMovies\";\nimport PosterNotFound from \"./PosterNotFound\";\nimport isUserValidated from \"../hooks/IsUserValidated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = ({\n  ArraySlicer,\n  clickHandler\n}) => {\n  _s();\n\n  let {\n    Search\n  } = useSelector(state => state.movies);\n  let {\n    validatedUser\n  } = useSelector(state => state);\n  let movies = ArraySlicer(Search); // useEffect(() => {\n  //   axios\n  //     .get(`/api/auth`)\n  //     .then((res) => res.data)\n  //     .then((user) => {\n  //       console.log(\"USER\", user);\n  //     })\n  //     .catch((err) => console.log(\"ERROR\", err));\n  // }, []);\n\n  const isValidated = isUserValidated(validatedUser);\n  return isValidated ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesAndButtonsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moviesMainDiv\",\n      children: [movies && movies.map((movies, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieByFiveDiv\",\n          children: movies.map(movie => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieRowDiv\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"styledLink\",\n                to: `/movies/${movie.imdbID}`,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: movie.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 25\n                }, this), movie.Poster.length > 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: movie.Poster,\n                    alt: \"movie poster\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"posterNotAvailableOnMoviesDiv\",\n                  children: /*#__PURE__*/_jsxDEV(PosterNotFound, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 23\n              }, this)\n            }, movie.imdbID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      }), !movies.length ? /*#__PURE__*/_jsxDEV(EmptyMovies, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForwardAndBack, {\n      clickHandler: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(Movies, \"WVBMlVfnU7ZRlIxMTng2sp94i24=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/Movies.jsx"],"names":["React","Link","useSelector","ForwardAndBack","EmptyMovies","PosterNotFound","isUserValidated","Movies","ArraySlicer","clickHandler","Search","state","movies","validatedUser","isValidated","map","index","movie","imdbID","Title","Poster","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAAA;;AAChD,MAAI;AAAEC,IAAAA;AAAF,MAAaR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA5B;AAEA,MAAI;AAAEC,IAAAA;AAAF,MAAoBX,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAAnC;AAEA,MAAIC,MAAM,GAAGJ,WAAW,CAACE,MAAD,CAAxB,CALgD,CAOhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,WAAW,GAAGR,eAAe,CAACO,aAAD,CAAnC;AAEA,SAAOC,WAAW,gBAChB;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGF,MAAM,IACLA,MAAM,CAACG,GAAP,CAAW,CAACH,MAAD,EAASI,KAAT,KAAmB;AAC5B,4BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGJ,MAAM,CAACG,GAAP,CAAYE,KAAD,IAAW;AACrB,gCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,SAAS,EAAC,YADZ;AAEE,gBAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,MAAO,EAF9B;AAAA,wCAIE;AAAA,4BAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJF,EAMGF,KAAK,CAACG,MAAN,CAAaC,MAAb,GAAsB,CAAtB,gBACC;AAAA,yCACE;AAAK,oBAAA,GAAG,EAAEJ,KAAK,CAACG,MAAhB;AAAwB,oBAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADD,gBAKC;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,yCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAkCH,KAAK,CAACC,MAAxC;AAAA;AAAA;AAAA;AAAA,oBADF;AAoBD,WArBA;AADH,WAAqCF,KAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AA0BD,OA3BD,CAFJ,EA8BG,CAACJ,MAAM,CAACS,MAAR,gBAAiB,QAAC,WAAD;AAAa,QAAA,MAAM,EAAET;AAArB;AAAA;AAAA;AAAA;AAAA,cAAjB,GAAmD,IA9BtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiCE,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,GAoCd,IApCJ;AAqCD,CAxDD;;GAAMF,M;UACaL,W,EAEOA,W;;;KAHpBK,M;AA0DN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ForwardAndBack from \"./ForwardAndBack\";\nimport EmptyMovies from \"./EmptyMovies\";\nimport PosterNotFound from \"./PosterNotFound\";\nimport isUserValidated from \"../hooks/IsUserValidated\";\n\nconst Movies = ({ ArraySlicer, clickHandler }) => {\n  let { Search } = useSelector((state) => state.movies);\n\n  let { validatedUser } = useSelector((state) => state);\n\n  let movies = ArraySlicer(Search);\n\n  // useEffect(() => {\n  //   axios\n  //     .get(`/api/auth`)\n  //     .then((res) => res.data)\n  //     .then((user) => {\n  //       console.log(\"USER\", user);\n  //     })\n  //     .catch((err) => console.log(\"ERROR\", err));\n  // }, []);\n\n  const isValidated = isUserValidated(validatedUser)\n\n  return isValidated ? (\n    <div className=\"moviesAndButtonsDiv\">\n      <div className=\"moviesMainDiv\">\n        {movies &&\n          movies.map((movies, index) => {\n            return (\n              <div className=\"movieByFiveDiv\" key={index}>\n                {movies.map((movie) => {\n                  return (\n                    <div className=\"movieRowDiv\" key={movie.imdbID}>\n                      <Link\n                        className=\"styledLink\"\n                        to={`/movies/${movie.imdbID}`}\n                      >\n                        <h1>{movie.Title}</h1>\n\n                        {movie.Poster.length > 6 ? (\n                          <div>\n                            <img src={movie.Poster} alt=\"movie poster\"></img>\n                          </div>\n                        ) : (\n                          <div className=\"posterNotAvailableOnMoviesDiv\">\n                            <PosterNotFound />\n                          </div>\n                        )}\n                      </Link>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        {!movies.length ? <EmptyMovies movies={movies} /> : null}\n      </div>\n      <ForwardAndBack clickHandler={clickHandler} />\n    </div>\n  ) : null;\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}