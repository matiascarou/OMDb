{"ast":null,"code":"var _jsxFileName = \"/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/SingleMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSingleMovie } from \"../store/singleMovie\";\nimport { Link } from \"react-router-dom\";\nimport PosterNotFound from \"./PosterNotFound\";\nimport spinnerGif from \"../assets/spinnerGif.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleMovie = ({\n  match,\n  clickHandler\n}) => {\n  _s();\n\n  const {\n    singleMovie\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = match.params;\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?i=${id}&apikey=62e1844`).then(res => res.data).then(singleMovie => {\n      dispatch(setSingleMovie(singleMovie));\n    });\n  }, []);\n  const {\n    Title,\n    Director,\n    Actors,\n    Plot,\n    Poster,\n    Country,\n    Writer,\n    Released,\n    Genre,\n    Ratings\n  } = singleMovie;\n  const technicalStuff = [Director, Actors, Writer, Released, Country, Genre];\n  const stuff = [\"Director\", \"Actors\", \"Writer\", \"Released\", \"Country\", \"Genre\"];\n  return id === singleMovie.imdbID ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singleMovieContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleMovieCastTitleAndPosterDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"technicalStuffDiv\",\n        children: technicalStuff.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"singleMovieCastDiv\",\n            children: [stuff[index], \": \", item.length > 6 ? item : 'Not available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleMovieTitleAndPosterDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"onlyPosterAndTitleDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              'max-width': '25vw'\n            },\n            children: Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), Poster.length > 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonAndPosterDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Poster,\n              className: \"movieSingleImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posterNotAvailableOnSingleMovieDiv\",\n            children: /*#__PURE__*/_jsxDEV(PosterNotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linkAndButtonDiv\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/movies\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => clickHandler(singleMovie.imdbID),\n                className: \"singleMovieButton\",\n                children: \"Add to favorites\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                width: \"auto\"\n              },\n              to: \"/movies\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"singleMovieButton\",\n                children: \"Back to movies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, singleMovie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plotAndRatingsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singleMoviePlotDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: Plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ratingsTitleAndRatingsDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"singleMoviePlotDiv\",\n            style: {\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"stars\",\n                children: \"\\u2728\\u2728\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), \"Ratings\", /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"stars\",\n                children: \"\\u2728\\u2728\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), Ratings && Ratings.map(rating => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"singleMovieRatingsDiv\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: rating.Source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: rating.Value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singleMovieContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingBarDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: spinnerGif,\n        alt: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleMovie, \"T56AMXoo7R5GPGKXdCJPybwDiSY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SingleMovie;\nexport default SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/SingleMovie.jsx"],"names":["React","axios","useEffect","useDispatch","useSelector","setSingleMovie","Link","PosterNotFound","spinnerGif","SingleMovie","match","clickHandler","singleMovie","state","dispatch","id","params","get","then","res","data","Title","Director","Actors","Plot","Poster","Country","Writer","Released","Genre","Ratings","technicalStuff","stuff","imdbID","map","item","index","length","width","display","rating","Source","Value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSingleMovie } from \"../store/singleMovie\";\nimport { Link } from \"react-router-dom\";\nimport PosterNotFound from \"./PosterNotFound\";\nimport spinnerGif from \"../assets/spinnerGif.gif\";\n\nconst SingleMovie = ({ match, clickHandler }) => {\n  const { singleMovie } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { id } = match.params;\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?i=${id}&apikey=62e1844`)\n      .then((res) => res.data)\n      .then((singleMovie) => {\n        dispatch(setSingleMovie(singleMovie));\n      });\n  }, []);\n\n  const {\n    Title,\n    Director,\n    Actors,\n    Plot,\n    Poster,\n    Country,\n    Writer,\n    Released,\n    Genre,\n    Ratings,\n  } = singleMovie;\n\n  const technicalStuff = [Director, Actors, Writer, Released, Country, Genre];\n\n  const stuff = [\n    \"Director\",\n    \"Actors\",\n    \"Writer\",\n    \"Released\",\n    \"Country\",\n    \"Genre\",\n  ];\n\n  return id === singleMovie.imdbID ? (\n    <div className=\"singleMovieContainer\">\n      <div className=\"singleMovieCastTitleAndPosterDiv\">\n        <div className=\"technicalStuffDiv\">\n          {technicalStuff.map((item, index) => {\n            return (\n              <h3 className=\"singleMovieCastDiv\">\n                {stuff[index]}: {item.length > 6 ? item : 'Not available'}\n              </h3>\n            );\n          })}\n        </div>\n        <div className=\"singleMovieTitleAndPosterDiv\" key={singleMovie.imdbID}>\n          <div className=\"onlyPosterAndTitleDiv\">\n            <h1 style={{'max-width': '25vw'}}>{Title}</h1>\n            {Poster.length > 6 ? (\n              <div className=\"buttonAndPosterDiv\">\n                <img src={Poster} className='movieSingleImage'></img>\n              </div>\n            ) : (\n              <div className=\"posterNotAvailableOnSingleMovieDiv\">\n                <PosterNotFound />\n              </div>\n            )}\n            <div className=\"linkAndButtonDiv\">\n              <Link to='/movies'>\n              <button onClick={() => clickHandler(singleMovie.imdbID)} className=\"singleMovieButton\">Add to favorites</button>\n              </Link>\n              <Link style={{ width: \"auto\" }} to=\"/movies\">\n                <button className=\"singleMovieButton\">Back to movies</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"plotAndRatingsDiv\">\n          <div className=\"singleMoviePlotDiv\">\n            <h3>{Plot}</h3>\n          </div>\n          <div className=\"ratingsTitleAndRatingsDiv\">\n            <h3\n              className=\"singleMoviePlotDiv\"\n              style={{ display: \"inline-block\" }}\n            >\n              <div>\n                <span role=\"img\" aria-label=\"stars\">\n                  ✨✨\n                </span>\n                Ratings\n                <span role=\"img\" aria-label=\"stars\">\n                  ✨✨\n                </span>\n              </div>\n              {Ratings &&\n                Ratings.map((rating) => {\n                  return (\n                    <div className=\"singleMovieRatingsDiv\">\n                      <p>{rating.Source}</p>\n                      <p>{rating.Value}</p>\n                    </div>\n                  );\n                })}\n            </h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"singleMovieContainer\">\n      <div className=\"loadingBarDiv\">\n        <img src={spinnerGif} alt=\"loading...\" />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleMovie;\n"]},"metadata":{},"sourceType":"module"}