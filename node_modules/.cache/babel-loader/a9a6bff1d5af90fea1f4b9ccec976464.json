{"ast":null,"code":"var _jsxFileName = \"/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ForwardAndBack from \"./ForwardAndBack\";\nimport EmptyMovies from \"./EmptyMovies\";\nimport PosterNotFound from \"./PosterNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = ({\n  ArraySlicer,\n  clickHandler\n}) => {\n  _s();\n\n  let {\n    Search\n  } = useSelector(state => state.movies);\n  let movies = ArraySlicer(Search);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesAndButtonsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moviesMainDiv\",\n      children: [movies && movies.map(movies => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieByFiveDiv\",\n          children: movies.map(movie => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieRowDiv\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"styledLink\",\n                to: `/movies/${movie.imdbID}`,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: movie.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 25\n                }, this), movie.Poster.length > 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: movie.Poster\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"posterNotAvailableOnMoviesDiv\",\n                  children: /*#__PURE__*/_jsxDEV(PosterNotFound, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this);\n      }), !movies.length ? /*#__PURE__*/_jsxDEV(EmptyMovies, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForwardAndBack, {\n      clickHandler: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"W6q+W4nXzXI5OXU1d0RJ+0JioOs=\", false, function () {\n  return [useSelector];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/components/Movies.jsx"],"names":["React","Link","useSelector","ForwardAndBack","EmptyMovies","PosterNotFound","Movies","ArraySlicer","clickHandler","Search","state","movies","map","movie","imdbID","Title","Poster","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAAA;;AAChD,MAAI;AAAEC,IAAAA;AAAF,MAAaP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA5B;AAEA,MAAIA,MAAM,GAAGJ,WAAW,CAACE,MAAD,CAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGE,MAAM,IACLA,MAAM,CAACC,GAAP,CAAYD,MAAD,IAAY;AACrB,4BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGA,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AACrB,gCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,SAAS,EAAC,YADZ;AAEE,gBAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,MAAO,EAF9B;AAAA,wCAIE;AAAA,4BAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJF,EAMGF,KAAK,CAACG,MAAN,CAAaC,MAAb,GAAsB,CAAtB,gBACC;AAAA,yCACE;AAAK,oBAAA,GAAG,EAAEJ,KAAK,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADD,gBAKC;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,yCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAoBD,WArBA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AA0BD,OA3BD,CAFJ,EA8BG,CAACL,MAAM,CAACM,MAAR,gBAAiB,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEN;AAArB;AAAA;AAAA;AAAA;AAAA,cAAjB,GAAmD,IA9BtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiCE,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA1CD;;GAAMF,M;UACaJ,W;;;KADbI,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ForwardAndBack from \"./ForwardAndBack\";\nimport EmptyMovies from \"./EmptyMovies\";\nimport PosterNotFound from \"./PosterNotFound\";\n\nconst Movies = ({ ArraySlicer, clickHandler }) => {\n  let { Search } = useSelector((state) => state.movies);\n\n  let movies = ArraySlicer(Search);\n\n  return (\n    <div className=\"moviesAndButtonsDiv\">\n      <div className=\"moviesMainDiv\">\n        {movies &&\n          movies.map((movies) => {\n            return (\n              <div className=\"movieByFiveDiv\">\n                {movies.map((movie) => {\n                  return (\n                    <div className=\"movieRowDiv\">\n                      <Link\n                        className=\"styledLink\"\n                        to={`/movies/${movie.imdbID}`}\n                      >\n                        <h1>{movie.Title}</h1>\n\n                        {movie.Poster.length > 6 ? (\n                          <div>\n                            <img src={movie.Poster}></img>\n                          </div>\n                        ) : (\n                          <div className=\"posterNotAvailableOnMoviesDiv\">\n                            <PosterNotFound />\n                          </div>\n                        )}\n                      </Link>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        {!movies.length ? <EmptyMovies movies={movies} /> : null}\n      </div>\n      <ForwardAndBack clickHandler={clickHandler} />\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}