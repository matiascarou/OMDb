{"ast":null,"code":"var _jsxFileName = \"/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/containers/MoviesContainer.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Movies from \"../components/Movies\";\nimport ArraySlicer from \"../hooks/ArraySlicer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { setPaginationCounter } from \"../store/paginationCounter\";\nimport { setMovies } from \"../store/movies\";\nimport { setTotalPages } from \"../store/totalPages\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesContainer = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    paginationCounter,\n    search,\n    movies,\n    totalPages\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    s,\n    y,\n    type\n  } = search;\n  const [page, setPage] = useState(`page=${paginationCounter}&`);\n  useEffect(() => {\n    setPage(`page=${paginationCounter}&`);\n    axios.get(`https://www.omdbapi.com/?${s}${y}${type}${page}apikey=62e1844`).then(res => res.data).then(pageMovies => {\n      dispatch(setMovies(pageMovies));\n      dispatch(setTotalPages(pageMovies.totalResults));\n    });\n  }, [paginationCounter]);\n\n  const clickHandler = e => {\n    _s();\n\n    const {\n      name\n    } = e.target;\n    dispatch(setPaginationCounter(name === \"nextPage\" && useSelector(state => state.paginationCounter > 1) ? paginationCounter + 1 : paginationCounter - 1));\n  };\n\n  _s(clickHandler, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  });\n\n  console.log(paginationCounter);\n  return /*#__PURE__*/_jsxDEV(Movies, {\n    ArraySlicer: ArraySlicer,\n    clickHandler: clickHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(MoviesContainer, \"l8vmH6kBu9rLA8UwiXaQJR6Vkh0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MoviesContainer;\nexport default MoviesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesContainer\");","map":{"version":3,"sources":["/Users/mat/Documents/01BOOTCAMP/CHECKPOINTS/26-checkpoint-OMDB/src/containers/MoviesContainer.jsx"],"names":["React","Movies","ArraySlicer","useDispatch","useSelector","useState","useEffect","setPaginationCounter","setMovies","setTotalPages","axios","MoviesContainer","paginationCounter","search","movies","totalPages","state","dispatch","s","y","type","page","setPage","get","then","res","data","pageMovies","totalResults","clickHandler","e","name","target","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAAA;;AAC5B,MAAI;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,MAA7B;AAAqCC,IAAAA;AAArC,MAAoDX,WAAW,CAAEY,KAAD,IAAWA,KAAZ,CAAnE;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAM;AAAEe,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA;AAAR,MAAiBP,MAAvB;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAE,QAAOO,iBAAkB,GAA3B,CAAhC;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAAE,QAAOV,iBAAkB,GAA3B,CAAP;AACAF,IAAAA,KAAK,CACFa,GADH,CACQ,4BAA2BL,CAAE,GAAEC,CAAE,GAAEC,IAAK,GAAEC,IAAK,gBADvD,EAEGG,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,EAGGF,IAHH,CAGSG,UAAD,IAAgB;AACpBV,MAAAA,QAAQ,CAACT,SAAS,CAACmB,UAAD,CAAV,CAAR;AACAV,MAAAA,QAAQ,CAACR,aAAa,CAACkB,UAAU,CAACC,YAAZ,CAAd,CAAR;AACD,KANH;AAOD,GATQ,EASN,CAAChB,iBAAD,CATM,CAAT;;AAYA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AAAA;;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,CAAC,CAACE,MAAnB;AACAf,IAAAA,QAAQ,CACNV,oBAAoB,CAClBwB,IAAI,KAAK,UAAT,IAAwB3B,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACJ,iBAAN,GAA0B,CAAtC,CAAnC,GAA8EA,iBAAiB,GAAG,CAAlG,GAAsGA,iBAAiB,GAAG,CADxG,CADd,CAAR;AAKD,GAPD;;AArB4B,KAqBtBiB,YArBsB;AAAA,YAyBEzB,WAzBF;AAAA;;AA8B5B6B,EAAAA,OAAO,CAACC,GAAR,CAAYtB,iBAAZ;AAEA,sBAAO,QAAC,MAAD;AAAQ,IAAA,WAAW,EAAEV,WAArB;AAAkC,IAAA,YAAY,EAAE2B;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjCD;;IAAMlB,e;UACoDP,W,EACvCD,W;;;KAFbQ,e;AAmCN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport Movies from \"../components/Movies\";\nimport ArraySlicer from \"../hooks/ArraySlicer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { setPaginationCounter } from \"../store/paginationCounter\";\nimport { setMovies } from \"../store/movies\";\nimport { setTotalPages } from \"../store/totalPages\";\nimport axios from 'axios'\n\nconst MoviesContainer = () => {\n  let { paginationCounter, search, movies, totalPages } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { s, y, type } = search;\n\n  const [page, setPage] = useState(`page=${paginationCounter}&`)\n\n\n  useEffect(() => {\n    setPage(`page=${paginationCounter}&`)\n    axios\n      .get(`https://www.omdbapi.com/?${s}${y}${type}${page}apikey=62e1844`)\n      .then((res) => res.data)\n      .then((pageMovies) => {\n        dispatch(setMovies(pageMovies));\n        dispatch(setTotalPages(pageMovies.totalResults));\n      });\n  }, [paginationCounter]);\n\n\n  const clickHandler = (e) => {\n    const { name } = e.target;\n    dispatch(\n      setPaginationCounter(\n        name === \"nextPage\" && (useSelector((state) => state.paginationCounter > 1))? paginationCounter + 1 : paginationCounter - 1\n      )\n    );\n  };\n\n  console.log(paginationCounter)\n\n  return <Movies ArraySlicer={ArraySlicer} clickHandler={clickHandler} />;\n};\n\nexport default MoviesContainer;\n"]},"metadata":{},"sourceType":"module"}